productivore/protected/components/Controller.php
	public $layout='//layouts/column1';
	
Yii Notes

Model View Controller
	...the model can communicate with the view?
	I suppose it happens when I don't really need to modify the contents and output them as is? Not really sure.
Entry Script
	It's that index.php thing. It's the very first script that gets executed.
	This is where I think I should declare my constants and whatnot.
	Debug mode's here. Set it as false when it's up.
Application Configuration
	It's another important file. protected/config/main.php
	The base directory (protected/) has an .htaccess of deny from all
	Application components and their settings:
		Specified in the main.php
			array(
				......
				'components'=>array
					......
					'cache'=>array(
						'class'=>'CMemCache',
						'servers'=>array(
							array('host'=>'server1', 'port'=>11211, 'weight'=>60),
							array('host'=>'server2', 'port'=>11211, 'weight'=>40),
						),
					),
				),
			)
		Yii::app()->ComponentID (example: Yii::app()->cache)
		You can checkout the core application components at the Yii\framework\web
		Some of the cooler components I saw
			CThemeManager
Controller
	CController::defaultAction
	Route = "/controllerID/actionID"
	Actions
		start all accessible methods with the word action: actionIndex()
		you need to specify all the actions in the run() function
		override action function: actions() function
	Action-parameter Binding
		THIS
			public function actionCreate($category, $language='en')
			{
				$category=(int)$category;
		 
				// ... fun code starts here ...
			}
		IS EQUAL TO THIS
			public function actionCreate()
			{
				if(isset($_GET['category']))
					$category=(int)$_GET['category'];
				else
					throw new CHttpException(404,'invalid request');
		 
				if(isset($_GET['language']))
					$language=$_GET['language'];
				else
					$language='en';
		 
				// ... fun code starts here ...
			}
		Filters
			class PerformanceFilter extends CFilter
			{
				protected function preFilter($filterChain)
				{
					// logic being applied before the action is executed
					return true; // false if the action should not be executed
				}
			 
				protected function postFilter($filterChain)
				{
					// logic being applied after the action is executed
				}
			}
			class PostController extends CController
			{
				......
				public function filters()
				{
					return array(
						'postOnly + edit, create',
						array(
							'application.filters.PerformanceFilter - edit, create',
							'unit'=>'second',
						),
					);
				}
			}
Models
	Yii implements two kinds of models: Form models and active records. They both extend from the same base class, CModel.
	A form model is an instance of CFormModel. Form models are used to store data collected from user input. 
	Active Record (AR) is a design pattern used to abstract database access in an object-oriented fashion. 
View
	Passing data into the view
		$this->render('edit', array(
			'var1'=>$value1,
			'var2'=>$value2,
		));
	Widgets: reusable views. Kinda like the schedule table.
		<?php $this->beginWidget('path.to.WidgetClass'); ?>
		...body content that may be captured by the widget...
		<?php $this->endWidget(); ?>
		
		OR
		
		<?php
		$this->widget('CMaskedTextField',array(
			'mask'=>'99/99/9999'
		));
		?>

		Widget instantiation (think of a widget as a controller, though.)
			class MyWidget extends CWidget
			{
				public function init()
				{
					// this method is called by CController::beginWidget()
				}
			 
				public function run()
				{
					// this method is called by CController::endWidget()
				}
			}
	System View
		- System views refer to the views used by Yii to display error and logging information. For example, when a user requests for a non-existing controller or action, Yii will throw an exception explaining the error. Yii displays the exception using a specific system view.
		- Yii provides a set of default system views located under framework/views. They can be customized by creating the same-named view files under protected/views/system.
Conventions
	URL
	Code: Camel on errything
	
Schema Conventions
	1. Comma separated:
		date_of_birth column
		time_elapsed_in_seconds
	2. Plural table names
		customer_location_addresses
	3. [SINGULAR, A]_[SINGULAR, B]_maps
		artists + songs = artist_song_maps
	4. Naming Primary Keys
		user_id
	5. Naming a constraint:
		<tablename>_<columnname>_<suffix>
		users_address_id_fk
	6. Constraints per table:
		<tablename>_<suffix>
	7. Type of constraint:
		_pk		primary key
		_fk		foreign key
		_ck		check
		_nn		not null
		_uq		unique
		_idx	index
	Source: http://leshazlewood.com/software-engineering/sql-style-guide/

http://www.yiiframework.com/doc/api/1.1/CActiveForm#enableClientValidation-detail

.control-label{
	width: 160px
	text-align: right
}

.controls
	margin-left: 180px;